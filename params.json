{"name":"RestBus","tagline":"Easy, Service Oriented, Asynchronous Messaging and Queueing for .Net","body":"RestBus is a high performance messaging library that enables you to consume your ASP.NET Core, WebAPI and ServiceStack service endpoints via RabbitMQ.  \r\nWith RestBus, queuing or sending a message asynchronously is as simple as:\r\n\r\n```csharp\r\nvar amqpUrl = \"amqp://localhost:5672\"; //AMQP URI for RabbitMQ server\r\nvar serviceName = \"samba\"; //The unique identifier for the target service\r\n\r\nvar client = new RestBusClient(new BasicMessageMapper(amqpUrl, serviceName));\r\n\r\n//Call the /hello/random endpoint\r\nvar response = await client.GetAsync(\"/hello/random\");\r\n```\r\nDoes that look familiar?  \r\nIf you're conversant with <a href=\"http://msdn.microsoft.com/en-us/library/system.net.http.httpclient(v=vs.110).aspx\" target=\"_blank\">.NET's HttpClient</a> class, you'll be right at home with the `RestBusClient` class. In fact they both derive from the same base class.  \r\n\r\nThe `/hello/random` endpoint is an ordinary web service endpoint in an ASP.NET Core, Web API or ServiceStack service.  \r\nRestBus routes the request over RabbitMQ, invokes the endpoint and returns the response, without ever hitting the HTTP transport.\r\n\r\n##Why do I need this?##\r\n\r\nUsing RabbitMQ from .NET is currently not a smooth experience. RestBus makes it ridiculously easy.  \r\nFor more reasons, see <a href=\"https://github.com/tenor/RestBus/wiki/Why-RestBus%3F\" target=\"_blank\">Why RestBus?</a>\r\n\r\n##Getting Started##\r\n\r\n- <a href=\"https://github.com/tenor/RestBus/wiki/ASP.NET-Core-service-(RabbitMQ-callable)\" target=\"_blank\">Using RestBus in an ASP.NET Core service</a> \r\n- <a href=\"https://github.com/tenor/RestBus/wiki/Web-API-service-(RabbitMQ-callable)\" target=\"_blank\">Using RestBus in a Web API service</a>  \r\n- <a href=\"https://github.com/tenor/RestBus/wiki/Self-hosting-Web-API-service-(RabbitMQ-callable)\" target=\"_blank\">Using RestBus in a Self-Hosted Web API service</a>  \r\n- <a href=\"https://github.com/tenor/RestBus/wiki/ASP.NET-hosted-ServiceStack-Service-(RabbitMQ-callable)\" target=\"_blank\">Using RestBus in an ASP.NET hosted ServiceStack service</a>  \r\n- <a href=\"https://github.com/tenor/RestBus/wiki/Self-hosting-ServiceStack-service-(RabbitMQ-callable)\" target=\"_blank\">Using RestBus in a Self-Hosted ServiceStack service</a>  \r\n- <a href=\"https://github.com/tenor/RestBus/wiki/Calling-a-Service-Endpoint-(via-RabbitMQ)\" target=\"_blank\">Calling Service Endpoints</a>  \r\n- <a href=\"https://github.com/tenor/RestBus/wiki/Queueing-messages\" target=\"_blank\">Queuing Messages</a> \r\n \r\n##Features##\r\n###Zero Configuration###\r\nYou don't need to configure the RabbitMQ server. RestBus automatically creates exchanges, queues and other resources as needed.\r\n\r\n###Use your Existing Web Services###\r\nYour services can still be consumed via HTTP while supporting RabbitMQ calls or you can turn off the HTTP interface.  \r\nMigrating your services to a message oriented architecture is as easy as writing a few lines of code.\r\n\r\n###Asynchronous Messaging###\r\nHighly efficient service request processing as endpoints can now be invoked asynchronously.\r\n\r\n###Horizontal scaling###\r\nScaling your services horizontally is as easy as launching new instances.\r\n\r\n###It's Fast###\r\nRestBus compares very favorably with other messaging libraries, and is the fastest library in many cases.\r\n\r\n![One Way RPC Test Results](https://raw.githubusercontent.com/tenor/RestBus.Benchmarks/master/images/RabbitMQ/rpc_throughput_20_threads.png)\r\n\r\nFor more details, see <a href=\"https://github.com/tenor/RestBus.Benchmarks\" target=\"_blank\">the benchmarks project</a>.\r\n\r\n###Customizable###\r\n<a href=\"https://github.com/tenor/RestBus/wiki/What-is-a-message-mapper%3F\" target=\"_blank\">Roll your own MessageMapper class</a> for custom messaging behavior.\r\n\r\n##How it works##\r\nRestBus follows the RPC messaging style.\r\nFor more details, see <a href=\"https://github.com/tenor/RestBus/wiki/How-it-works\" target=\"_blank\">How It Works</a>. \r\n\r\n##Advanced Scenarios##\r\n- <a href=\"https://github.com/tenor/RestBus/wiki/Messaging-options\" target=\"_blank\">Specifying messaging options</a>\r\n- <a href=\"https://github.com/tenor/RestBus/wiki/Sticky-messaging\" target=\"_blank\">Sticky messaging</a>\r\n\r\n##License##\r\nApache License, Version 2.0","google":"UA-46923082-1","note":"Don't delete this file! It's used internally to help with page regeneration."}